set.seed(1)
rpois(5, 2)
tbl <- read.table('C\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv')
tbl <- read.table('Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv')
getwd()
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv')
getwd()
tbl$V1
str(tbl)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv', sep = ',')
getwd()
str(tbl)
tbl$V1
str(tbl)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv', comment.char = '"')
str(tbl)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv', header =  T)
str(tbl)
?read.table
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-ss06hid.csv', header =  T, sep = ',')
str(tbl)
str(tbl$VAL)
tbl$ind <- tbl$VAL = 24
tbl$ind <- tbl$VAL == 24
sum(tbl$ind)
sum(tbl$ind, na.rm = T)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATA.gov_NGAP.csv',
header =  T,
nrows = 6,
skip = 17)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATAgov_NGAP.csv',
header =  T,
nrows = 6,
skip = 17)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATAgov_NGAP.xlsx',
header =  T,
nrows = 6,
skip = 17)
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATAgov_NGAP.xlsx',
header =  T,
nrows = 23,
skip = 17)
tbl
tbl <- read.table('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATAgov_NGAP.xlsx',
header =  T,
nrows = 6,
skip = 17)
install.packages('xlsx')
library('xlsx')
install.packages('xlsx')
library('xlsx')
install.packages('xlsx')
library('xlsx')
R.Version()
install.packages('xlsx')
library('xlsx')
tbl <- read.xlsx('C:\\Users\\fifiu_000\\OneDrive\\Downloads\\getdata-data-DATAgov_NGAP.xlsx',
header =  T,
nrows = 6,
skip = 17)
getwd()
install.packages('httr')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "916adb18d349ec70af2f",
secret = "9d402ed050f60a4753746892a1d23406e3e694ef")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "916adb18d349ec70af2f",
secret = "9d402ed050f60a4753746892a1d23406e3e694ef")
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "916adb18d349ec70af2f",
secret = "9d402ed050f60a4753746892a1d23406e3e694ef")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/rate_limit", gtoken)
req
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "916adb18d349ec70af2f",
secret = "9d402ed050f60a4753746892a1d23406e3e694ef")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp
github_token
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "916adb18d349ec70af2f",
secret = "9d402ed050f60a4753746892a1d23406e3e694ef")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
setwd("C:/Users/fifiu_000/OneDrive/Downloads/UCI HAR Dataset")
read_dta <- function(samp) {
pths <- paste0('./', samp, '/')
a <- c('subject_', 'X_', 'y_')
pths1 <- paste0(pths, a, samp, '.txt')
dt <- lapply(pths1, scan, sep = c('', ' ', ''))
dt1 <- dt[[1]]
dt2 <- dt[[2]]
dt3 <- dt[[3]]
dt <- list(dt1, dt2, dt3)
names(dt) <- pths1
dt
}
dt.t <- read_dta('test')
dt.tr <- read_dta('train')
dt.all <- mapply(c, x = dt.t, y = dt.tr, SIMPLIFY = F)
rm(dt.t, dt.tr)
dt.all$activity_labels <- readLines('activity_labels.txt')
dt.all$features <- readLines('features.txt')
dt.all <- lapply(dt.all, unname)
dt.temp1 <- data.frame(cbind(dt.all[[1]], dt.all[[3]]))
colnames(dt.temp1) <- c('subject', 'act')
dt.temp1 <- cbind(measure = dt.all[[2]], dt.temp1, meas.dscr = dt.all[[5]])
dt.temp2 <- data.frame(do.call(rbind, strsplit(dt.all[[4]], ' ')))
dt.temp2[, 1] <- as.numeric(dt.temp2[, 1])
colnames(dt.temp2) <- c('act.lbl', 'Activity')
row.names(dt.temp2) <- NULL
dt.all <- merge(dt.temp1, dt.temp2, by.x = 'act', by.y = 'act.lbl', all.x = TRUE)
dt.all$act <- NULL
rm(dt.temp1, dt.temp2)
dt.all <- dt.all[grep('mean\\(\\)|std\\(\\)', dt.all$meas.dscr), ]
dt.all$Activity<- as.factor(dt.all$Activity)
dt.all$meas.dscr <- as.character(dt.all$meas.dscr)
levels(dt.all$Activity) <- c('Laying down',
'Sitting',
'Standing',
'Walking',
'Walking (downstairs)',
'Walking (upstairs)')
dt.all$meas.dscr <- gsub('\\d+', '', dt.all$meas.dscr)
dt.all$meas.dscr <- gsub(' ', '', dt.all$meas.dscr)
dt.temp <- data.frame(do.call(rbind, strsplit(dt.all$meas.dscr, '-')))
dt.all$metric <- dt.temp$X2
dt.all$meas.dscr <- paste(dt.temp$X1, dt.temp$X3, sep = '-')
require('reshape2')
require('data.table')
head(dt.all)
w <- reshape(dt.all,
timevar = "metric",
idvar = c("subject", "meas.dscr", "Activity"),
direction = "wide")
w
head(w)
dt.all$meas.dscr
source('C:/Users/fifiu_000/OneDrive/Downloads/UCI HAR Dataset/1.R', echo=TRUE)
setwd("C:/Users/fifiu_000/OneDrive/Downloads/UCI HAR Dataset")
read_dta <- function(samp) {
pths <- paste0('./', samp, '/')
a <- c('subject_', 'X_', 'y_')
pths1 <- paste0(pths, a, samp, '.txt')
dt <- lapply(pths1, scan, sep = c('', ' ', ''))
dt1 <- dt[[1]]
dt2 <- dt[[2]]
dt3 <- dt[[3]]
dt <- list(dt1, dt2, dt3)
names(dt) <- pths1
dt
}
dt.t <- read_dta('test')
dt.tr <- read_dta('train')
dt.all <- mapply(c, x = dt.t, y = dt.tr, SIMPLIFY = F)
rm(dt.t, dt.tr)
dt.all$activity_labels <- readLines('activity_labels.txt')
dt.all$features <- readLines('features.txt')
dt.all <- lapply(dt.all, unname)
dt.temp1 <- data.frame(cbind(dt.all[[1]], dt.all[[3]]))
colnames(dt.temp1) <- c('subject', 'act')
dt.temp1 <- cbind(measure = dt.all[[2]], dt.temp1, meas.dscr = dt.all[[5]])
dt.temp2 <- data.frame(do.call(rbind, strsplit(dt.all[[4]], ' ')))
dt.temp2[, 1] <- as.numeric(dt.temp2[, 1])
colnames(dt.temp2) <- c('act.lbl', 'Activity')
row.names(dt.temp2) <- NULL
dt.all <- merge(dt.temp1, dt.temp2, by.x = 'act', by.y = 'act.lbl', all.x = TRUE)
dt.all$act <- NULL
rm(dt.temp1, dt.temp2)
dt.all <- dt.all[grep('mean\\(\\)|std\\(\\)', dt.all$meas.dscr), ]
dt.all$Activity<- as.factor(dt.all$Activity)
dt.all$meas.dscr <- as.character(dt.all$meas.dscr)
levels(dt.all$Activity) <- c('Laying down',
'Sitting',
'Standing',
'Walking',
'Walking (downstairs)',
'Walking (upstairs)')
dt.all$meas.dscr <- gsub('\\d+', '', dt.all$meas.dscr)
dt.all$meas.dscr <- gsub(' ', '', dt.all$meas.dscr)
dt.temp <- data.frame(do.call(rbind, strsplit(dt.all$meas.dscr, '-')))
dt.all[!(dt.all$X3 %in% c('X', 'Y', 'Z')), 'X3'] <- ''
dt.all$metric <- dt.temp$X2
dt.all$meas.dscr <- paste(dt.temp$X1, dt.temp$X3, sep = ' ')
dt.all
head(dt.all)
setwd("C:/Users/fifiu_000/OneDrive/Downloads/UCI HAR Dataset")
read_dta <- function(samp) {
pths <- paste0('./', samp, '/')
a <- c('subject_', 'X_', 'y_')
pths1 <- paste0(pths, a, samp, '.txt')
dt <- lapply(pths1, scan, sep = c('', ' ', ''))
dt1 <- dt[[1]]
dt2 <- dt[[2]]
dt3 <- dt[[3]]
dt <- list(dt1, dt2, dt3)
names(dt) <- pths1
dt
}
dt.t <- read_dta('test')
dt.tr <- read_dta('train')
dt.all <- mapply(c, x = dt.t, y = dt.tr, SIMPLIFY = F)
rm(dt.t, dt.tr)
dt.all$activity_labels <- readLines('activity_labels.txt')
dt.all$features <- readLines('features.txt')
dt.all <- lapply(dt.all, unname)
dt.temp1 <- data.frame(cbind(dt.all[[1]], dt.all[[3]]))
colnames(dt.temp1) <- c('subject', 'act')
dt.temp1 <- cbind(measure = dt.all[[2]], dt.temp1, meas.dscr = dt.all[[5]])
dt.temp2 <- data.frame(do.call(rbind, strsplit(dt.all[[4]], ' ')))
dt.temp2[, 1] <- as.numeric(dt.temp2[, 1])
colnames(dt.temp2) <- c('act.lbl', 'Activity')
row.names(dt.temp2) <- NULL
dt.all <- merge(dt.temp1, dt.temp2, by.x = 'act', by.y = 'act.lbl', all.x = TRUE)
dt.all$act <- NULL
rm(dt.temp1, dt.temp2)
dt.all <- dt.all[grep('mean\\(\\)|std\\(\\)', dt.all$meas.dscr), ]
dt.all$Activity<- as.factor(dt.all$Activity)
dt.all$meas.dscr <- as.character(dt.all$meas.dscr)
levels(dt.all$Activity) <- c('Laying down',
'Sitting',
'Standing',
'Walking',
'Walking (downstairs)',
'Walking (upstairs)')
dt.all$meas.dscr <- gsub('\\d+', '', dt.all$meas.dscr)
dt.all$meas.dscr <- gsub(' ', '', dt.all$meas.dscr)
dt.temp <- data.frame(do.call(rbind, strsplit(dt.all$meas.dscr, '-')))
dt.temp[!(dt.temp$X3 %in% c('X', 'Y', 'Z')), 'X3'] <- ''
dt.all$metric <- dt.temp$X2
dt.all$meas.dscr <- paste(dt.temp$X1, dt.temp$X3, sep = ' ')
require('data.table')
w <- reshape(dt.all,
timevar = "metric",
idvar = c("subject", "meas.dscr", "Activity"),
direction = "wide")
summary(dt.all)
require('data.table')
w <- reshape(dt.all,
timevar = "metric",
idvar = c("subject", "meas.dscr", "Activity"),
direction = "wide")
colnames(dt.all) <- c('subject', 'measures.description', 'Activity', 'mean', 'sd')
dt.all <- data.table(dt.all)
dt.all[, .(Mean = mean(mean), Sd = mean(sd)), by=list(measures.description, subject)]
summary(dt.all)
dt.all <- reshape(dt.all,
timevar = "metric",
idvar = c("subject", "meas.dscr", "Activity"),
direction = "wide")
colnames(dt.all) <- c('subject', 'measures.description', 'Activity', 'mean', 'sd')
dt.all <- data.table(dt.all)
dt.all[, .(Mean = mean(mean), Sd = mean(sd)), by=list(measures.description, subject)]
summary(dt.all)
reshape(dt.all,
timevar = "metric",
idvar = c("subject", "meas.dscr", "Activity"),
direction = "wide")
